
stages:
  - sast
  - build
  - push
  - deploy

cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
  - node_modules/
  - dist/

before_script:
  - aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
  - aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
  - aws configure set region $AWS_DEFAULT_REGION
  - aws ecr get-login-password --region ${AWS_DEFAULT_REGION} | docker login --username AWS --password-stdin $REPOSITORY_URL
  - $(aws ecr get-login --no-include-email --region "${AWS_DEFAULT_REGION}")

sonarqube-check:
  stage: sast
  image: 
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
    GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script: 
    - sonar-scanner
  allow_failure: true
  only: ['development']


build_development:
  stage: build
  script:
  - npm install
  - npm run build
  only: ['development']


push_development:
  stage: push
  script:
    - docker build -t $REPOSITORY_URL/$REPO:latest .
    - docker push $REPOSITORY_URL/$REPO:latest
    - docker rmi $REPOSITORY_URL/$REPO:latest
  only: ['development']


deploy_development:
  stage: deploy
  script:
    - ssh ubuntu@$MASTER_IP 'sh update/dev-auth-service.sh'
  only: ['development']
